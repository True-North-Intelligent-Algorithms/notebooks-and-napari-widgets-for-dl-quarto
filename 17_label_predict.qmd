
# Train and test model on a single image

## Why? 
* Proof of concept
* Grants, SBIRs
* Data sharing restrictions

## How?
* Can't just train/predict on same image
* Use ROIs to divide image into training/validation

# Train and test model on a single image

* Explore and label data with [napari-easy-augment-batch-dl](https://github.com/True-North-Intelligent-Algorithms/napari-easy-augment-batch-dl)
    * draw and label ROIs
* Augment and crop to create patches (hundreds)
* Train
* Predict and fix mistakes
 
# {background-image="./easy-augment-one-image.png" background-size="contain"}

# Augmentation

* From single label can genrate hundred of augmented patches
* Flip, rotate, resize
* Random adjust brightness/contrast
* Random adjust gamma
* Color jitter
* Elastic transform

# Augmentation

* Save explicitly?  
    * can be helpful for troubleshooting, performance and repeatability
* Augment 'inline'
    * More variation, save diskspace

# {background-image="./patches.jpg" background-size="contain"}

# Prediction
 * after training go back and predict
    * correct mistakes

# {background-image="./easy-augment-one-image.png" background-size="contain"}

# {background-image="./easy-augment-one-image-predict.png" background-size="contain"}